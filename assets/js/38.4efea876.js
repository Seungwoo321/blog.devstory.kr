(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{605:function(s,a,t){"use strict";t.r(a);var n=t(45),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"클로저-closure-는-무엇이며-어떻게-왜-사용하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#클로저-closure-는-무엇이며-어떻게-왜-사용하나요"}},[s._v("#")]),s._v(" 클로저(Closure)는 무엇이며, 어떻게/왜 사용하나요 ?")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#사전-지식"}},[s._v("사전 지식")]),t("ul",[t("li",[t("a",{attrs:{href:"#스코프-scope"}},[s._v("스코프(Scope)")])]),t("li",[t("a",{attrs:{href:"#스코프-체인-scope-chain"}},[s._v("스코프 체인(Scope Chain)")])]),t("li",[t("a",{attrs:{href:"#렉시컬-스코프-lexical-scope-정적스코프"}},[s._v("렉시컬 스코프(Lexical Scope) - 정적스코프")])]),t("li",[t("a",{attrs:{href:"#다이나믹-스코프-dynamic-scope-동적스코프"}},[s._v("다이나믹 스코프(Dynamic Scope) - 동적스코프")])])])]),t("li",[t("a",{attrs:{href:"#클로저-closure"}},[s._v("클로저(Closure)")]),t("ul",[t("li",[t("a",{attrs:{href:"#무엇인가"}},[s._v("무엇인가?")])]),t("li",[t("a",{attrs:{href:"#어떻게-왜-사용하는가"}},[s._v("어떻게/왜 사용하는가?")])]),t("li",[t("a",{attrs:{href:"#단점은"}},[s._v("단점은?")])])])]),t("li",[t("a",{attrs:{href:"#참고링크"}},[s._v("참고링크")])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"사전-지식"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#사전-지식"}},[s._v("#")]),s._v(" 사전 지식")]),s._v(" "),t("p",[s._v("클로저를 이해 하기 위해서 Scope, Scope Chain, Context 에 대한 이해가 선행되어야 합니다.")]),s._v(" "),t("h3",{attrs:{id:"스코프-scope"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#스코프-scope"}},[s._v("#")]),s._v(" 스코프(Scope)")]),s._v(" "),t("p",[s._v("프로그래밍에서 변수에 접근 할 수 있는 유효 범위")]),s._v(" "),t("ul",[t("li",[s._v("var 는 선언된 곳과 가장 가까운 함수를 유효 범위로 가집니다 (함수 스코프)")]),s._v(" "),t("li",[s._v("let, const 는 선언된 곳과 가장 가까운 블록을 유효 범위로 가집니다 (블록 스코프)")])]),s._v(" "),t("h3",{attrs:{id:"스코프-체인-scope-chain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#스코프-체인-scope-chain"}},[s._v("#")]),s._v(" 스코프 체인(Scope Chain)")]),s._v(" "),t("p",[s._v("식별자를 찾을 때 자신이 속한 스코프에서 찾고 없으면 상위 스코프에서 다시 찾는 현상 입니다.")]),s._v(" "),t("h3",{attrs:{id:"렉시컬-스코프-lexical-scope-정적스코프"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#렉시컬-스코프-lexical-scope-정적스코프"}},[s._v("#")]),s._v(" 렉시컬 스코프(Lexical Scope) - 정적스코프")]),s._v(" "),t("p",[s._v("함수를 어디서 "),t("strong",[s._v("선언")]),s._v(" 하였는지에 따라서 상위 스코프를 결정하는 것으로 JavaScript는 렉시컬 스코프를 따릅니다.")]),s._v(" "),t("p",[s._v("예제")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// global scope")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" number "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" number "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// local scope")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ?")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ?")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("위의 예제에서 bar 함수내에 선언 된 number가 없어서 찾을 수 없으므로 스코프 체인으로 상위 스코프에서 number 를 찾게 됩니다. bar 함수는 전역에 선언 되었으므로 글로벌 스코프의 전역 변수를 상위 스코프로 가지게 되어 전역 변수의 number를 찾아서 10이 출력됩니다.")]),s._v(" "),t("h3",{attrs:{id:"다이나믹-스코프-dynamic-scope-동적스코프"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#다이나믹-스코프-dynamic-scope-동적스코프"}},[s._v("#")]),s._v(" 다이나믹 스코프(Dynamic Scope) - 동적스코프")]),s._v(" "),t("p",[s._v("함수의 "),t("strong",[s._v("호출")]),s._v("에 따라 상위 스코프가 정해지는 것으로 Perl, Bash Shell 에서 다이나믹 스코프를 따릅니다.")]),s._v(" "),t("p",[s._v("예제")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NUMBER")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NUMBER")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n bar\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("bar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NUMBER")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nfoo "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ??")]),s._v("\nbar "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ?? ")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("위의 예제는 다이나믹 스코프를 따르는 쉘 스크립트로 둘다 1이 출력됩니다. bar 를 먼저 호출 하고 foo 를 호출 하면 10, 1 이 출력됩니다.")]),s._v(" "),t("h2",{attrs:{id:"클로저-closure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#클로저-closure"}},[s._v("#")]),s._v(" 클로저(Closure)")]),s._v(" "),t("h3",{attrs:{id:"무엇인가"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#무엇인가"}},[s._v("#")]),s._v(" 무엇인가?")]),s._v(" "),t("p",[s._v("내부 함수를 리턴하는 외부 함수가 종료된 후에 내부 함수를 실행 해도 렉시컬 스코프 환경을 유지하여 실행 이전에 기억하고 있던 변수에 접근 할 수 있는 특성")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 외부함수")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("outer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 내부함수")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("y")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" carryOuter "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("outer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("carryOuter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("위의 예제에서 outer 의 내부 익명함수의 렉시컬 스코프는 y와 스코프 체인으로 outer 를 상위 스코프로 갖게 되어 x 변수에 접근 할 수 있습니다. outer 는 내부 함수를 carryOuter에게 리턴 하고 Call Stack 에서 제거 되었지만, carryOuter() 를 실행하면, 내부 익명함수는 렉시컬 스코프 환경을 유지하여 outer 함수에 선언된 x 에 접근 할 수 있게 됩니다. 이러한 특성을 클로저라고 합니다.")]),s._v(" "),t("h3",{attrs:{id:"어떻게-왜-사용하는가"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#어떻게-왜-사용하는가"}},[s._v("#")]),s._v(" 어떻게/왜 사용하는가?")]),s._v(" "),t("ul",[t("li",[s._v("모듈 패턴으로 데이터를 보호하고 캡슐화 합니다.")]),s._v(" "),t("li",[s._v("함수형 프로그래밍에서 curring 패턴으로 사용합니다.")]),s._v(" "),t("li",[s._v("생성자가 한 개의 객체만을 생성하는 싱글톤 패턴에서 사용합니다.")])]),s._v(" "),t("h3",{attrs:{id:"단점은"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#단점은"}},[s._v("#")]),s._v(" 단점은?")]),s._v(" "),t("p",[s._v("스코프가 종료 된 후에도 스코프 밖에서 언젠든지 호출 될 수 있도록 메모리에 계속해서 저장하고 있기 때문에 메모리 사용량이 늘어납니다.")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("클로저 해제는 null 을 대입합니다.")])])]),s._v(" "),t("h2",{attrs:{id:"참고링크"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#참고링크"}},[s._v("#")]),s._v(" 참고링크")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://medium.com/@yeon22/javascript-lexical-scope-static-scope-and-dynamic-scope-c4a9e941fab3",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://medium.com/@yeon22/javascript-lexical-scope-static-scope-and-dynamic-scope-c4a9e941fab3"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://poiemaweb.com/js-scope",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://poiemaweb.com/js-scope"),t("OutboundLink")],1)])]),s._v(" "),t("Comment")],1)}),[],!1,null,null,null);a.default=e.exports}}]);